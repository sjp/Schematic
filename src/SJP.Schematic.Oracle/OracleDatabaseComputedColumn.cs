using System.ComponentModel;
using System.Diagnostics;
using LanguageExt;
using SJP.Schematic.Core;
using SJP.Schematic.Core.Utilities;

namespace SJP.Schematic.Oracle;

/// <summary>
/// A computed column that is specific to Oracle.
/// </summary>
/// <seealso cref="OracleDatabaseColumn" />
/// <seealso cref="IDatabaseComputedColumn" />
[DebuggerDisplay("{" + nameof(DebuggerDisplay) + ",nq}")]
public class OracleDatabaseComputedColumn : OracleDatabaseColumn, IDatabaseComputedColumn
{
    /// <summary>
    /// Initializes a new instance of the <see cref="OracleDatabaseComputedColumn"/> class.
    /// </summary>
    /// <param name="columnName">A column name.</param>
    /// <param name="type">A column type.</param>
    /// <param name="isNullable">If set to <see langword="true" /> is nullable.</param>
    /// <param name="definition">The computed column definition.</param>
    public OracleDatabaseComputedColumn(Identifier columnName, IDbType type, bool isNullable, Option<string> definition)
        : base(columnName, type, isNullable, definition)
    {
        Definition = definition;
    }

    /// <summary>
    /// The definition of the computed column.
    /// </summary>
    public Option<string> Definition { get; }

    /// <summary>
    /// Determines whether the values of this column are generated by the database.
    /// </summary>
    /// <value>Always <see langword="true" /> unless overridden.</value>
    public override bool IsComputed { get; } = true;

    /// <summary>
    /// Returns a string that provides a basic string representation of this object.
    /// </summary>
    /// <returns>A <see cref="string"/> that represents this instance.</returns>
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override string ToString() => DebuggerDisplay;

    private string DebuggerDisplay
    {
        get
        {
            var builder = StringBuilderCache.Acquire();

            builder.Append("Computed Column: ")
                .Append(Name.LocalName);

            return builder.GetStringAndRelease();
        }
    }
}