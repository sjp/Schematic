<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Description>A reporting engine for Schematic. Generates schema reports for databases.</Description>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\SJP.Schematic.Core\SJP.Schematic.Core.csproj" />
    <ProjectReference Include="..\SJP.Schematic.Dbml\SJP.Schematic.Dbml.csproj" />
    <ProjectReference Include="..\SJP.Schematic.Dot\SJP.Schematic.Dot.csproj" />
    <ProjectReference Include="..\SJP.Schematic.Graphviz\SJP.Schematic.Graphviz.csproj" />
    <ProjectReference Include="..\SJP.Schematic.Lint\SJP.Schematic.Lint.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" Version="8.0.10">
      <TreatAsUsed>true</TreatAsUsed>
    </PackageReference>
    <PackageReference Include="RazorLight" Version="2.3.1" />
    <PackageReference Include="System.Text.Encodings.Web" Version="8.0.0">
      <TreatAsUsed>true</TreatAsUsed>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Html\Templates\*.cshtml" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="node_modules\**" />
    <EmbeddedResource Remove="node_modules\**" />
    <None Remove="node_modules\**" />
  </ItemGroup>

  <PropertyGroup>
    <!-- File with mtime of last successful npm install -->
    <NpmInstallStampFile>node_modules/.install-stamp</NpmInstallStampFile>
    <GulpBuildStampFile>node_modules/.gulp-build-stamp</GulpBuildStampFile>

    <NpmExitCode></NpmExitCode>
    <NpmExpectedExitCode>1</NpmExpectedExitCode>
  </PropertyGroup>

  <ItemGroup>
    <GulpSourceFiles Include="package.json;gulpfile.babel.js;Source/**/*.*" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="Microsoft.SourceLink.GitHub" Version="8.0.0" />
  </ItemGroup>

  <Target Name="CheckNpmExists">
    <Exec Command="npm" ContinueOnError="true" IgnoreExitCode="true" StandardErrorImportance="Low" StandardOutputImportance="Low">
      <Output TaskParameter="ExitCode" PropertyName="NpmExitCode" />
    </Exec>
  </Target>

  <Target Name="NpmClean" BeforeTargets="BeforeClean" DependsOnTargets="CheckNpmExists">
    <Exec Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'" Command="npm install" WorkingDirectory="$(MSBuildThisFileDirectory)" />
    <Exec Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'" Command="npm run clean" WorkingDirectory="$(MSBuildThisFileDirectory)" />
    <Message Condition="'$(NpmExitCode)' != '$(NpmExpectedExitCode)'" Text="npm is not available. Cleaning of front-end code will not occur." />
  </Target>

  <Target Name="NpmBuild" BeforeTargets="GulpBuild" DependsOnTargets="CheckNpmExists" Inputs="package.json" Outputs="$(NpmInstallStampFile)">
    <Exec Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'" Command="npm install" WorkingDirectory="$(MSBuildThisFileDirectory)" />
    <Touch Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'" Files="$(NpmInstallStampFile)" AlwaysCreate="true" />
    <Message Condition="'$(NpmExitCode)' != '$(NpmExpectedExitCode)'" Text="npm is not available. Building of front-end code will not occur." />
  </Target>

  <Target Name="GulpBuild" BeforeTargets="BeforeBuild" Inputs="@(GulpSourceFiles)" Outputs="$(GulpBuildStampFile)">
    <Exec Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'" Command="npm run build" WorkingDirectory="$(MSBuildThisFileDirectory)" />
    <Touch Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'" Files="$(GulpBuildStampFile)" AlwaysCreate="true" />
    <Message Condition="'$(NpmExitCode)' != '$(NpmExpectedExitCode)'" Text="npm and gulp are not available. A gulp build will not occur." />

    <ItemGroup Condition="'$(NpmExitCode)' == '$(NpmExpectedExitCode)'">
      <EmbeddedResource Include="assets\**\*.*" />
    </ItemGroup>
  </Target>

</Project>
